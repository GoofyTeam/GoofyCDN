services:
  # Service de développement avec hot-reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./app/CDN:/app
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=development
      - GOPATH=/go
      - GOCACHE=/go/cache
    networks:
      - go-network
    depends_on:
      - redis
      - prometheus
      - grafana

  # Service de production
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - GO_ENV=production
    networks:
      - go-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    depends_on:
      - redis
      - prometheus
      - grafana

  # Redis pour le cache distribué
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - go-network
    volumes:
      - redis-data:/data

  # Prometheus pour la collecte de métriques
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - go-network

  # Grafana pour la visualisation
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - go-network
    depends_on:
      - prometheus

networks:
  go-network:
    driver: bridge

volumes:
  redis-data:
  grafana-data:
